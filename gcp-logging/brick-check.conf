# Google Cloud Logging configuration for Brick Check Pipeline
# This configuration forwards application logs to Google Cloud Logging

<source>
  @type tail
  @id input_brick_check_pipeline
  path /var/log/brick-check/pipeline_*.log
  pos_file /var/lib/google-fluentd/pos/brick-check-pipeline.pos
  read_from_head true
  tag gcp.brick-check.pipeline
  <parse>
    @type regexp
    expression /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?<message>.*)$/
    time_key timestamp
    time_format %Y-%m-%d %H:%M:%S
  </parse>
</source>

<source>
  @type tail
  @id input_brick_check_errors
  path /var/log/brick-check/errors.log
  pos_file /var/lib/google-fluentd/pos/brick-check-errors.pos
  read_from_head true
  tag gcp.brick-check.error
  <parse>
    @type regexp
    expression /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) ERROR: (?<message>.*)$/
    time_key timestamp
    time_format %Y-%m-%d %H:%M:%S
  </parse>
</source>

<source>
  @type tail
  @id input_brick_check_stages
  path /var/log/brick-check/stages.log
  pos_file /var/lib/google-fluentd/pos/brick-check-stages.pos
  read_from_head true
  tag gcp.brick-check.stage
  <parse>
    @type regexp
    expression /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) STAGE: (?<message>.*)$/
    time_key timestamp
    time_format %Y-%m-%d %H:%M:%S
  </parse>
</source>

# Add metadata and labels for better organization in Cloud Logging
<filter gcp.brick-check.**>
  @type record_transformer
  <record>
    application "brick-check"
    environment "production"
    vm_instance "#{ENV['HOSTNAME']}"
    project_id "#{ENV['GOOGLE_CLOUD_PROJECT']}"
    component "${tag_parts[2]}"
    severity "${tag_parts[2] == 'error' ? 'ERROR' : 'INFO'}"
  </record>
</filter>

# Forward to Google Cloud Logging
<match gcp.brick-check.**>
  @type google_cloud
  @id output_gcp_brick_check
  
  # Use service account authentication
  use_metadata_service true
  
  # Log configuration
  log_name "brick-check-pipeline"
  
  # Resource labels for better organization
  <labels>
    application "brick-check"
    environment "production"
    vm_instance "#{ENV['HOSTNAME']}"
  </labels>
  
  # Buffer configuration for performance
  <buffer>
    @type file
    path /var/lib/google-fluentd/buf/gcp-brick-check
    flush_mode interval
    flush_interval 10s
    chunk_limit_size 1MB
    total_limit_size 32MB
    retry_forever true
    retry_max_interval 30
    overflow_action block
  </buffer>
  
  # Format configuration
  <format>
    @type json
  </format>
</match> 